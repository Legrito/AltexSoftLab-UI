{"version":3,"sources":["webpack:///./index.js","webpack:///./js/slider.js","webpack:///./js/mobile-menu.js"],"names":["selector","config","_timerId","_indicatorItems","_slider","document","querySelector","_sliderContainer","_sliderItems","querySelectorAll","_sliderControls","_currentPosition","_transformValue","_itemsArray","_indicatorIndex","_indicatorIndexMax","length","_config","isAutoplay","directionAutoplay","delayAutoplay","isPauseOnHover","key","i","push","item","position","transform","getItemIndex","mode","index","getItemPosition","_move","direction","nextItem","currentIndicator","style","classList","remove","add","_startAutoplay","_stopAutoplay","setInterval","clearInterval","indicatorsContainer","createElement","sliderIndicatorsItem","setAttribute","appendChild","_addIndicators","_startX","window","navigator","maxTouchPoints","addEventListener","e","changedTouches","clientX","_deltaX","target","contains","preventDefault","getAttribute","_moveTo","parseInt","visibilityState","_setUpListeners","slideShow","console","log","menuBtnEl","burgerEl","crossEl","navListEl","toggle"],"mappings":"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","file":"main.2d85531deed890cbf283.js","sourcesContent":["import './css/styles.css';\r\nimport './js/mobile-menu';\r\nimport './js/slider';\r\n","\r\n    'use strict';\r\n    var slideShow = (function () {\r\n      return function (selector, config) {\r\n        var\r\n          _slider = document.querySelector(selector), // основный элемент блока\r\n          _sliderContainer = _slider.querySelector('.slider__items'), // контейнер для .slider-item\r\n          _sliderItems = _slider.querySelectorAll('.slider__item'), // коллекция .slider-item\r\n          _sliderControls = _slider.querySelectorAll('.slider__control'), // элементы управления\r\n          _currentPosition = 0, // позиция левого активного элемента\r\n          _transformValue = 0, // значение транфсофрмации .slider_wrapper\r\n          _transformStep = 100, // величина шага (для трансформации)\r\n          _itemsArray = [], // массив элементов\r\n          _timerId,\r\n          _indicatorItems,\r\n          _indicatorIndex = 0,\r\n          _indicatorIndexMax = _sliderItems.length - 1,\r\n          _stepTouch = 50,\r\n          _config = {\r\n            isAutoplay: false, // автоматическая смена слайдов\r\n            directionAutoplay: 'next', // направление смены слайдов\r\n            delayAutoplay: 5000, // интервал между автоматической сменой слайдов\r\n            isPauseOnHover: true // устанавливать ли паузу при поднесении курсора к слайдеру\r\n          };\r\n\r\n        // настройка конфигурации слайдера в зависимости от полученных ключей\r\n        for (var key in config) {\r\n          if (key in _config) {\r\n            _config[key] = config[key];\r\n          }\r\n        }\r\n\r\n        // наполнение массива _itemsArray\r\n        for (var i = 0, length = _sliderItems.length; i < length; i++) {\r\n          _itemsArray.push({ item: _sliderItems[i], position: i, transform: 0 });\r\n        }\r\n\r\n        // переменная position содержит методы с помощью которой можно получить минимальный и максимальный индекс элемента, а также соответствующему этому индексу позицию\r\n        var position = {\r\n          getItemIndex: function (mode) {\r\n            var index = 0;\r\n            for (var i = 0, length = _itemsArray.length; i < length; i++) {\r\n              if ((_itemsArray[i].position < _itemsArray[index].position && mode === 'min') || (_itemsArray[i].position > _itemsArray[index].position && mode === 'max')) {\r\n                index = i;\r\n              }\r\n            }\r\n            return index;\r\n          },\r\n          getItemPosition: function (mode) {\r\n            return _itemsArray[position.getItemIndex(mode)].position;\r\n          }\r\n        };\r\n\r\n        // функция, выполняющая смену слайда в указанном направлении\r\n        var _move = function (direction) {\r\n          var nextItem, currentIndicator = _indicatorIndex;;\r\n          if (direction === 'next') {\r\n            _currentPosition++;\r\n            if (_currentPosition > position.getItemPosition('max')) {\r\n              nextItem = position.getItemIndex('min');\r\n              _itemsArray[nextItem].position = position.getItemPosition('max') + 1;\r\n              _itemsArray[nextItem].transform += _itemsArray.length * 100;\r\n              _itemsArray[nextItem].item.style.transform = 'translateX(' + _itemsArray[nextItem].transform + '%)';\r\n            }\r\n            _transformValue -= _transformStep;\r\n            _indicatorIndex = _indicatorIndex + 1;\r\n            if (_indicatorIndex > _indicatorIndexMax) {\r\n              _indicatorIndex = 0;\r\n            }\r\n          } else {\r\n            _currentPosition--;\r\n            if (_currentPosition < position.getItemPosition('min')) {\r\n              nextItem = position.getItemIndex('max');\r\n              _itemsArray[nextItem].position = position.getItemPosition('min') - 1;\r\n              _itemsArray[nextItem].transform -= _itemsArray.length * 100;\r\n              _itemsArray[nextItem].item.style.transform = 'translateX(' + _itemsArray[nextItem].transform + '%)';\r\n            }\r\n            _transformValue += _transformStep;\r\n            _indicatorIndex = _indicatorIndex - 1;\r\n            if (_indicatorIndex < 0) {\r\n              _indicatorIndex = _indicatorIndexMax;\r\n            }\r\n          }\r\n          _sliderContainer.style.transform = 'translateX(' + _transformValue + '%)';\r\n          _indicatorItems[currentIndicator].classList.remove('active');\r\n          _indicatorItems[_indicatorIndex].classList.add('active');\r\n        };\r\n\r\n        // функция, осуществляющая переход к слайду по его порядковому номеру\r\n        var _moveTo = function (index) {\r\n          var i = 0, direction = (index > _indicatorIndex) ? 'next' : 'prev';\r\n          while (index !== _indicatorIndex && i <= _indicatorIndexMax) {\r\n            _move(direction);\r\n            i++;\r\n          }\r\n        };\r\n\r\n        // функция для запуска автоматической смены слайдов через промежутки времени\r\n        var _startAutoplay = function () {\r\n          if (!_config.isAutoplay) {\r\n            return;\r\n          }\r\n          _stopAutoplay();\r\n          _timerId = setInterval(function () {\r\n            _move(_config.directionAutoplay);\r\n          }, _config.delayAutoplay);\r\n        };\r\n\r\n        // функция, отключающая автоматическую смену слайдов\r\n        var _stopAutoplay = function () {\r\n          clearInterval(_timerId);\r\n        };\r\n\r\n        // функция, добавляющая индикаторы к слайдеру\r\n        var _addIndicators = function () {\r\n          var indicatorsContainer = document.createElement('ol');\r\n          indicatorsContainer.classList.add('slider__indicators');\r\n          for (var i = 0, length = _sliderItems.length; i < length; i++) {\r\n            var sliderIndicatorsItem = document.createElement('li');\r\n            if (i === 0) {\r\n              sliderIndicatorsItem.classList.add('active');\r\n            }\r\n            sliderIndicatorsItem.setAttribute(\"data-slide-to\", i);\r\n            indicatorsContainer.appendChild(sliderIndicatorsItem);\r\n          }\r\n          _slider.appendChild(indicatorsContainer);\r\n          _indicatorItems = _slider.querySelectorAll('.slider__indicators > li')\r\n        };\r\n\r\n        var _isTouchDevice = function () {\r\n          return !!('ontouchstart' in window || navigator.maxTouchPoints);\r\n        };\r\n\r\n        // функция, осуществляющая установку обработчиков для событий \r\n        var _setUpListeners = function () {\r\n          var _startX = 0;\r\n          if (_isTouchDevice()) {\r\n            _slider.addEventListener('touchstart', function (e) {\r\n              _startX = e.changedTouches[0].clientX;\r\n              _startAutoplay();\r\n            });\r\n            _slider.addEventListener('touchend', function (e) {\r\n              var\r\n                _endX = e.changedTouches[0].clientX,\r\n                _deltaX = _endX - _startX;\r\n              if (_deltaX > _stepTouch) {\r\n                _move('prev');\r\n              } else if (_deltaX < -_stepTouch) {\r\n                _move('next');\r\n              }\r\n              _startAutoplay();\r\n            });\r\n          } else {\r\n            for (var i = 0, length = _sliderControls.length; i < length; i++) {\r\n              _sliderControls[i].classList.add('slider__control_show');\r\n            }\r\n          }\r\n          _slider.addEventListener('click', function (e) {\r\n            if (e.target.classList.contains('slider__control')) {\r\n              e.preventDefault();\r\n              _move(e.target.classList.contains('slider__control_next') ? 'next' : 'prev');\r\n              _startAutoplay();\r\n            } else if (e.target.getAttribute('data-slide-to')) {\r\n              e.preventDefault();\r\n              _moveTo(parseInt(e.target.getAttribute('data-slide-to')));\r\n              _startAutoplay();\r\n            }\r\n          });\r\n          document.addEventListener('visibilitychange', function () {\r\n            if (document.visibilityState === \"hidden\") {\r\n              _stopAutoplay();\r\n            } else {\r\n              _startAutoplay();\r\n            }\r\n          }, false);\r\n          if (_config.isPauseOnHover && _config.isAutoplay) {\r\n            _slider.addEventListener('mouseenter', function () {\r\n              _stopAutoplay();\r\n            });\r\n            _slider.addEventListener('mouseleave', function () {\r\n              _startAutoplay();\r\n            });\r\n          }\r\n        };\r\n\r\n        // добавляем индикаторы к слайдеру\r\n        _addIndicators();\r\n        // установливаем обработчики для событий\r\n        _setUpListeners();\r\n        // запускаем автоматическую смену слайдов, если установлен соответствующий ключ\r\n        _startAutoplay();\r\n\r\n        return {\r\n          // метод слайдера для перехода к следующему слайду\r\n          next: function () {\r\n            _move('next');\r\n          },\r\n          // метод слайдера для перехода к предыдущему слайду          \r\n          left: function () {\r\n            _move('prev');\r\n          },\r\n          // метод отключающий автоматическую смену слайдов\r\n          stop: function () {\r\n            _config.isAutoplay = false;\r\n            _stopAutoplay();\r\n          },\r\n          // метод запускающий автоматическую смену слайдов\r\n          cycle: function () {\r\n            _config.isAutoplay = true;\r\n            _startAutoplay();\r\n          }\r\n        }\r\n      }\r\n    }());\r\n\r\n    slideShow('.slider', {\r\n      isAutoplay: false\r\n    });\r\n\r\n    console.log('ima working');","const menuBtnEl = document.querySelector('.menu-btn');\r\nconst burgerEl = document.querySelector('.burger');\r\nconst crossEl = document.querySelector('.cross');\r\nconst navListEl = document.querySelector('.navigation');\r\n\r\nmenuBtnEl.addEventListener('click', () => {\r\n    burgerEl.classList.toggle('js-hide');\r\n    crossEl.classList.toggle('js-hide');\r\n    navListEl.classList.toggle('js-hide');\r\n})"],"sourceRoot":""}